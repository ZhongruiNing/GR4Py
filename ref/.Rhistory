## -----------------------------------------------------------------------------
library(airGR)
install.packages("airGR")
## -----------------------------------------------------------------------------
library(airGR)
## -----------------------------------------------------------------------------
data(L0123001)
summary(BasinObs, digits = 2)
## -----------------------------------------------------------------------------
InputsModel <- CreateInputsModel(FUN_MOD = RunModel_GR4J, DatesR = BasinObs$DatesR,
Precip = BasinObs$P, PotEvap = BasinObs$E)
str(InputsModel)
FUN_MOD <- match.fun('mean')
FUN_MOD(c{1, 2, 3})
FUN_MOD(c(1 ,2, 3))
.FeatModels <- function() {
path <- system.file("modelsFeatures/FeatModelsGR.csv", package = "airGR")
read.table(path, header = TRUE, sep = ";", stringsAsFactors = FALSE)
}
FeatMod <- .FeatModels()
View(FeatMod)
NameFunMod <- ifelse(test = FeatMod$Pkg %in% "airGR",
yes  = paste("RunModel", FeatMod$NameMod, sep = "_"),
no   = FeatMod$NameMod)
FunMod <- lapply(NameFunMod, FUN = match.fun)
View(FunMod)
FUN_MOD = RunModel_GR4J
IdMod <- which(sapply(FunMod, FUN = function(x) identical(FUN_MOD, x)))
View(FunMod)
View(FeatMod)
FeatMod[IdMod, ]
res <- as.list(FeatMod[IdMod, ])
View(res)
res$NameFunMod <- NameFunMod[IdMod]
res$TimeStep <- switch(res$TimeUnit,
hourly  =       1,
daily   =       1 * 24,
monthly =   28:31 * 24,
yearly  = 365:366 * 24)
res$TimeUnit <- "monthly"
res$TimeStep <- switch(res$TimeUnit,
hourly  =       1,
daily   =       1 * 24,
monthly =   28:31 * 24,
yearly  = 365:366 * 24)
res$Class <- c(res$TimeUnit, res$Class)
FUN_MOD <- "EunModel_cemaNeigeGR4J"
FUN_MOD <- "RunModel_CemaNeigeGR4J"
NameFunMod <- ifelse(test = FeatMod$Pkg %in% "airGR",
yes  = paste("RunModel", FeatMod$NameMod, sep = "_"),
no   = FeatMod$NameMod)
FunMod <- lapply(NameFunMod, FUN = match.fun)
IdMod <- which(sapply(FunMod, FUN = function(x) identical(FUN_MOD, x)))
res <- as.list(FeatMod[IdMod, ])
res$NameFunMod <- NameFunMod[IdMod]
FunMod <- lapply(NameFunMod, FUN = match.fun)
IdMod <- which(sapply(FunMod, FUN = function(x) identical(FUN_MOD, x)))
res <- as.list(FeatMod[IdMod, ])
NameFunMod <- ifelse(test = FeatMod$Pkg %in% "airGR",
yes  = paste("RunModel", FeatMod$NameMod, sep = "_"),
no   = FeatMod$NameMod)
FunMod <- lapply(NameFunMod, FUN = match.fun)
IdMod <- which(sapply(FunMod, FUN = function(x) identical(FUN_MOD, x)))
res <- as.list(FeatMod[IdMod, ])
res$NameFunMod <- NameFunMod[IdMod]
FeatMod <- .FeatModels()
FeatMod <- .FeatModels()
.FeatModels <- function() {
path <- system.file("modelsFeatures/FeatModelsGR.csv", package = "airGR")
read.table(path, header = TRUE, sep = ";", stringsAsFactors = FALSE)
}
FeatMod <- .FeatModels()
FUN_MOD <- "RunModel_CemaNeigeGR4J"
FeatMod$Pkg %in% "airGR"
paste("RunModel", FeatMod$NameMod, sep = "_")
no   = FeatMod$NameMod
FeatMod$NameMod
NameFunMod <- ifelse(test = FeatMod$Pkg %in% "airGR",
yes  = paste("RunModel", FeatMod$NameMod, sep = "_"),
no   = FeatMod$NameMod)
NameFunMod
FunMod <- lapply(NameFunMod, FUN = match.fun)
View(FunMod)
IdMod <- which(sapply(FunMod, FUN = function(x) identical(FUN_MOD, x)))
stop("'FUN_MOD' must be one of ", paste(NameFunMod, collapse = ", "))
stop("'FUN_MOD' must be one of ", paste(NameFunMod, collapse = ", "))
paste(NameFunMod, collapse = ", ")
NameFunMod <- ifelse(test = FeatMod$Pkg %in% "airGR",
yes  = paste("RunModel", FeatMod$NameMod, sep = "_"),
no   = FeatMod$NameMod)
FunMod <- lapply(NameFunMod, FUN = match.fun)
IdMod <- which(sapply(FunMod, FUN = function(x) identical(FUN_MOD, x)))
FeatMod <- .FeatModels()
NameFunMod <- ifelse(test = FeatMod$Pkg %in% "airGR",
yes  = paste("RunModel", FeatMod$NameMod, sep = "_"),
no   = FeatMod$NameMod)
FunMod <- lapply(NameFunMod, FUN = match.fun)
IdMod <- which(sapply(FunMod, FUN = function(x) identical(FUN_MOD, x)))
FUN_MOD <- "RunModel_GR4J"
NameFunMod <- ifelse(test = FeatMod$Pkg %in% "airGR",
yes  = paste("RunModel", FeatMod$NameMod, sep = "_"),
no   = FeatMod$NameMod)
FunMod <- lapply(NameFunMod, FUN = match.fun)
IdMod <- which(sapply(FunMod, FUN = function(x) identical(FUN_MOD, x)))
IdMod
View(FunMod)
View(FeatMod)
NameFunMod <- ifelse(test = FeatMod$Pkg %in% "airGR",
yes  = paste("RunModel", FeatMod$NameMod, sep = "_"),
no   = FeatMod$NameMod)
NameFunMod
FUN_MOD
FunMod <- lapply(NameFunMod, FUN = match.fun)
FunMod
IdMod <- which(sapply(FunMod, FUN = function(x) identical(FUN_MOD, x)))
IdMod
.FeatModels <- function() {
path <- system.file("modelsFeatures/FeatModelsGR.csv", package = "airGR")
read.table(path, header = TRUE, sep = ";", stringsAsFactors = FALSE)
}
FeatMod <- .FeatModels()
NameFunMod <- ifelse(test = FeatMod$Pkg %in% "airGR",
yes  = paste("RunModel", FeatMod$NameMod, sep = "_"),
no   = FeatMod$NameMod)
NameFunMod
FunMod <- lapply(NameFunMod, FUN = match.fun)
which(sapply(FunMod, FUN = function(x) identical("RunModel_GR4J", x)))
which(sapply(FunMod, FUN = function(x) identical("RunModel_GR2M", x)))
IdMod = 3
as.list(FeatMod[IdMod, ])
res <- as.list(FeatMod[IdMod, ])
View(res)
NameFunMod[IdMod]
res$Class <- c(res$TimeUnit, res$Class)
res$CodeModHydro <- res$CodeMod
grepl("CemaNeige", res$NameFunMod)
gsub("CemaNeige", "", res$CodeMod)
FUN_MOD = "RunModel_CemaNeigeGR4H"
NameFunMod <- ifelse(test = FeatMod$Pkg %in% "airGR",
yes  = paste("RunModel", FeatMod$NameMod, sep = "_"),
no   = FeatMod$NameMod)
FunMod <- lapply(NameFunMod, FUN = match.fun)
IdMod <- which(sapply(FunMod, FUN = function(x) identical(FUN_MOD, x)))
View(FeatMod)
IdMod=13
res <- as.list(FeatMod[IdMod, ])
res$NameFunMod <- NameFunMod[IdMod]
View(res)
res$Class <- c(res$TimeUnit, res$Class)
res$CodeModHydro <- res$CodeMod
grepl("CemaNeige", res$NameFunMod)
c(res$Class, "CemaNeige")
gsub("CemaNeige", "", res$CodeMod)
## -----------------------------------------------------------------------------
data(L0123001)
summary(BasinObs, digits = 2)
## -----------------------------------------------------------------------------
InputsModel <- CreateInputsModel(FUN_MOD = RunModel_GR4J, DatesR = BasinObs$DatesR,
Precip = BasinObs$P, PotEvap = BasinObs$E)
str(InputsModel)
## -----------------------------------------------------------------------------
Ind_Run <- seq(which(format(BasinObs$DatesR, format = "%Y-%m-%d") == "1990-01-01"),
which(format(BasinObs$DatesR, format = "%Y-%m-%d") == "1999-12-31"))
Ind_Run
## -----------------------------------------------------------------------------
RunOptions <- CreateRunOptions(FUN_MOD = RunModel_GR4J,
InputsModel = InputsModel, IndPeriod_Run = Ind_Run,
IniStates = NULL, IniResLevels = NULL, IndPeriod_WarmUp = NULL)
## -----------------------------------------------------------------------------
RunOptions <- CreateRunOptions(FUN_MOD = RunModel_GR4J,
InputsModel = InputsModel, IndPeriod_Run = Ind_Run,
IniStates = NULL, IniResLevels = NULL, IndPeriod_WarmUp = NULL)
View(RunOptions)
## -----------------------------------------------------------------------------
CalibOptions <- CreateCalibOptions(FUN_MOD = RunModel_GR4J, FUN_CALIB = Calibration_Michel)
str(CalibOptions)
## -----------------------------------------------------------------------------
OutputsCalib <- Calibration_Michel(InputsModel = InputsModel, RunOptions = RunOptions,
InputsCrit = InputsCrit, CalibOptions = CalibOptions,
FUN_MOD = RunModel_GR4J)
Param <- OutputsCalib$ParamFinalR
Param
## -----------------------------------------------------------------------------
RunOptions <- CreateRunOptions(FUN_MOD = RunModel_GR4J,
InputsModel = InputsModel, IndPeriod_Run = Ind_Run,
IniStates = NULL, IniResLevels = NULL, IndPeriod_WarmUp = NULL)
str(RunOptions)
## -----------------------------------------------------------------------------
InputsCrit <- CreateInputsCrit(FUN_CRIT = ErrorCrit_NSE, InputsModel = InputsModel,
RunOptions = RunOptions, VarObs = "Q", Obs = BasinObs$Qmm[Ind_Run])
str(InputsCrit)
## -----------------------------------------------------------------------------
CalibOptions <- CreateCalibOptions(FUN_MOD = RunModel_GR4J, FUN_CALIB = Calibration_Michel)
str(CalibOptions)
## -----------------------------------------------------------------------------
OutputsCalib <- Calibration_Michel(InputsModel = InputsModel, RunOptions = RunOptions,
InputsCrit = InputsCrit, CalibOptions = CalibOptions,
FUN_MOD = RunModel_GR4J)
Param <- OutputsCalib$ParamFinalR
Param
## -----------------------------------------------------------------------------
OutputsModel <- RunModel_GR4J(InputsModel = InputsModel, RunOptions = RunOptions, Param = Param)
View(OutputsModel)
## -----------------------------------------------------------------------------
library(airGR)
## -----------------------------------------------------------------------------
data(L0123001)
summary(BasinObs, digits = 2)
## -----------------------------------------------------------------------------
InputsModel <- CreateInputsModel(FUN_MOD = RunModel_GR4J, DatesR = BasinObs$DatesR,
Precip = BasinObs$P, PotEvap = BasinObs$E)
str(InputsModel)
## -----------------------------------------------------------------------------
Ind_Run <- seq(which(format(BasinObs$DatesR, format = "%Y-%m-%d") == "1990-01-01"),
which(format(BasinObs$DatesR, format = "%Y-%m-%d") == "1999-12-31"))
## -----------------------------------------------------------------------------
RunOptions <- CreateRunOptions(FUN_MOD = RunModel_GR4J,
InputsModel = InputsModel, IndPeriod_Run = Ind_Run,
IniStates = NULL, IniResLevels = NULL, IndPeriod_WarmUp = NULL)
str(RunOptions)
## -----------------------------------------------------------------------------
OutputsCrit <- ErrorCrit_KGE(InputsCrit = InputsCrit, OutputsModel = OutputsModel)
## -----------------------------------------------------------------------------
library(airGR)
## -----------------------------------------------------------------------------
data(L0123001)
summary(BasinObs, digits = 2)
## -----------------------------------------------------------------------------
InputsModel <- CreateInputsModel(FUN_MOD = RunModel_GR4J, DatesR = BasinObs$DatesR,
Precip = BasinObs$P, PotEvap = BasinObs$E)
str(InputsModel)
## -----------------------------------------------------------------------------
Ind_Run <- seq(which(format(BasinObs$DatesR, format = "%Y-%m-%d") == "1990-01-01"),
which(format(BasinObs$DatesR, format = "%Y-%m-%d") == "1999-12-31"))
str(Ind_Run)
## -----------------------------------------------------------------------------
RunOptions <- CreateRunOptions(FUN_MOD = RunModel_GR4J,
InputsModel = InputsModel, IndPeriod_Run = Ind_Run,
IniStates = NULL, IniResLevels = NULL, IndPeriod_WarmUp = NULL)
str(RunOptions)
## -----------------------------------------------------------------------------
InputsCrit <- CreateInputsCrit(FUN_CRIT = ErrorCrit_NSE, InputsModel = InputsModel,
RunOptions = RunOptions, VarObs = "Q", Obs = BasinObs$Qmm[Ind_Run])
str(InputsCrit)
## -----------------------------------------------------------------------------
CalibOptions <- CreateCalibOptions(FUN_MOD = RunModel_GR4J, FUN_CALIB = Calibration_Michel)
str(CalibOptions)
## -----------------------------------------------------------------------------
OutputsCalib <- Calibration_Michel(InputsModel = InputsModel, RunOptions = RunOptions,
InputsCrit = InputsCrit, CalibOptions = CalibOptions,
FUN_MOD = RunModel_GR4J)
Param <- OutputsCalib$ParamFinalR
Param
## -----------------------------------------------------------------------------
OutputsModel <- RunModel_GR4J(InputsModel = InputsModel, RunOptions = RunOptions, Param = Param)
str(OutputsModel)
plot(OutputsModel, Qobs = BasinObs$Qmm[Ind_Run])
View(RunOptions)
RunOptions$IniStates
RunOptions$FortranOutputs$GR
View(OutputsModel)
View(RunOptions)
View(OutputsModel)
View(InputsModel)
InputsModel[["Precip"]]
## -----------------------------------------------------------------------------
Ind_Run <- seq(which(format(BasinObs$DatesR, format = "%Y-%m-%d") == "1990-01-01"),
which(format(BasinObs$DatesR, format = "%Y-%m-%d") == "1999-12-31"))
str(Ind_Run)
## -----------------------------------------------------------------------------
RunOptions <- CreateRunOptions(FUN_MOD = RunModel_GR4J,
InputsModel = InputsModel, IndPeriod_Run = Ind_Run,
IniStates = NULL, IniResLevels = NULL, IndPeriod_WarmUp = NULL)
str(RunOptions)
## -----------------------------------------------------------------------------
InputsCrit <- CreateInputsCrit(FUN_CRIT = ErrorCrit_NSE, InputsModel = InputsModel,
RunOptions = RunOptions, VarObs = "Q", Obs = BasinObs$Qmm[Ind_Run])
str(InputsCrit)
## -----------------------------------------------------------------------------
CalibOptions <- CreateCalibOptions(FUN_MOD = RunModel_GR4J, FUN_CALIB = Calibration_Michel)
str(CalibOptions)
## -----------------------------------------------------------------------------
OutputsCalib <- Calibration_Michel(InputsModel = InputsModel, RunOptions = RunOptions,
InputsCrit = InputsCrit, CalibOptions = CalibOptions,
FUN_MOD = RunModel_GR4J)
View(RunOptions)
View(OutputsModel)
## -----------------------------------------------------------------------------
data(L0123003)
summary(BasinObs, digits = 2)
## -----------------------------------------------------------------------------
InputsModel <- CreateInputsModel(FUN_MOD = RunModel_GR4J, DatesR = BasinObs$DatesR,
Precip = BasinObs$P, PotEvap = BasinObs$E)
## -----------------------------------------------------------------------------
InputsModel <- CreateInputsModel(FUN_MOD = RunModel_GR5H, DatesR = BasinObs$DatesR,
Precip = BasinObs$P, PotEvap = BasinObs$E)
str(InputsModel)
## -----------------------------------------------------------------------------
Ind_Run <- seq(which(format(BasinObs$DatesR, format = "%Y-%m-%d") == "1990-01-01"),
which(format(BasinObs$DatesR, format = "%Y-%m-%d") == "1999-12-31"))
## -----------------------------------------------------------------------------
Ind_Run <- seq(which(format(BasinObs$DatesR, format = "%Y-%m-%d-%H") == "1990-01-01-00"),
which(format(BasinObs$DatesR, format = "%Y-%m-%d-%H") == "1999-12-31-00"))
## -----------------------------------------------------------------------------
data(L0123001)
summary(BasinObs, digits = 2)
## -----------------------------------------------------------------------------
InputsModel <- CreateInputsModel(FUN_MOD = RunModel_GR4J, DatesR = BasinObs$DatesR,
Precip = BasinObs$P, PotEvap = BasinObs$E)
str(InputsModel)
## -----------------------------------------------------------------------------
Ind_Run <- seq(which(format(BasinObs$DatesR, format = "%Y-%m-%d") == "1990-01-01"),
which(format(BasinObs$DatesR, format = "%Y-%m-%d") == "1999-12-31"))
str(Ind_Run)
## -----------------------------------------------------------------------------
RunOptions <- CreateRunOptions(FUN_MOD = RunModel_GR4J,
InputsModel = InputsModel, IndPeriod_Run = Ind_Run,
IniStates = NULL, IniResLevels = NULL, IndPeriod_WarmUp = NULL)
str(RunOptions)
## -----------------------------------------------------------------------------
InputsCrit <- CreateInputsCrit(FUN_CRIT = ErrorCrit_NSE, InputsModel = InputsModel,
RunOptions = RunOptions, VarObs = "Q", Obs = BasinObs$Qmm[Ind_Run])
str(InputsCrit)
## -----------------------------------------------------------------------------
CalibOptions <- CreateCalibOptions(FUN_MOD = RunModel_GR4J, FUN_CALIB = Calibration_Michel)
str(CalibOptions)
## -----------------------------------------------------------------------------
OutputsCalib <- Calibration_Michel(InputsModel = InputsModel, RunOptions = RunOptions,
InputsCrit = InputsCrit, CalibOptions = CalibOptions,
FUN_MOD = RunModel_GR4J)
Param <- OutputsCalib$ParamFinalR
Param
## -----------------------------------------------------------------------------
OutputsModel <- RunModel_GR4J(InputsModel = InputsModel, RunOptions = RunOptions, Param = Param)
str(OutputsModel)
## ----eval=F-------------------------------------------------------------------
plot(OutputsModel, Qobs = BasinObs$Qmm[Ind_Run])
## -----------------------------------------------------------------------------
InputsModel <- CreateInputsModel(FUN_MOD = RunModel_GR5J, DatesR = BasinObs$DatesR,
Precip = BasinObs$P, PotEvap = BasinObs$E)
str(InputsModel)
## -----------------------------------------------------------------------------
Ind_Run <- seq(which(format(BasinObs$DatesR, format = "%Y-%m-%d") == "1990-01-01"),
which(format(BasinObs$DatesR, format = "%Y-%m-%d") == "1999-12-31"))
str(Ind_Run)
## -----------------------------------------------------------------------------
RunOptions <- CreateRunOptions(FUN_MOD = RunModel_GR4J,
InputsModel = InputsModel, IndPeriod_Run = Ind_Run,
IniStates = NULL, IniResLevels = NULL, IndPeriod_WarmUp = NULL)
str(RunOptions)
## -----------------------------------------------------------------------------
InputsCrit <- CreateInputsCrit(FUN_CRIT = ErrorCrit_NSE, InputsModel = InputsModel,
RunOptions = RunOptions, VarObs = "Q", Obs = BasinObs$Qmm[Ind_Run])
str(InputsCrit)
## -----------------------------------------------------------------------------
CalibOptions <- CreateCalibOptions(FUN_MOD = RunModel_GR4J, FUN_CALIB = Calibration_Michel)
str(CalibOptions)
## -----------------------------------------------------------------------------
OutputsCalib <- Calibration_Michel(InputsModel = InputsModel, RunOptions = RunOptions,
InputsCrit = InputsCrit, CalibOptions = CalibOptions,
FUN_MOD = RunModel_GR4J)
Param <- OutputsCalib$ParamFinalR
Param
## -----------------------------------------------------------------------------
OutputsModel <- RunModel_GR4J(InputsModel = InputsModel, RunOptions = RunOptions, Param = Param)
str(OutputsModel)
## ----eval=F-------------------------------------------------------------------
plot(OutputsModel, Qobs = BasinObs$Qmm[Ind_Run])
## -----------------------------------------------------------------------------
InputsModel <- CreateInputsModel(FUN_MOD = RunModel_GR6J, DatesR = BasinObs$DatesR,
Precip = BasinObs$P, PotEvap = BasinObs$E)
str(InputsModel)
## -----------------------------------------------------------------------------
Ind_Run <- seq(which(format(BasinObs$DatesR, format = "%Y-%m-%d") == "1990-01-01"),
which(format(BasinObs$DatesR, format = "%Y-%m-%d") == "1999-12-31"))
str(Ind_Run)
## -----------------------------------------------------------------------------
RunOptions <- CreateRunOptions(FUN_MOD = RunModel_GR4J,
InputsModel = InputsModel, IndPeriod_Run = Ind_Run,
IniStates = NULL, IniResLevels = NULL, IndPeriod_WarmUp = NULL)
str(RunOptions)
## -----------------------------------------------------------------------------
InputsCrit <- CreateInputsCrit(FUN_CRIT = ErrorCrit_NSE, InputsModel = InputsModel,
RunOptions = RunOptions, VarObs = "Q", Obs = BasinObs$Qmm[Ind_Run])
str(InputsCrit)
## -----------------------------------------------------------------------------
CalibOptions <- CreateCalibOptions(FUN_MOD = RunModel_GR6J, FUN_CALIB = Calibration_Michel)
str(CalibOptions)
## -----------------------------------------------------------------------------
OutputsCalib <- Calibration_Michel(InputsModel = InputsModel, RunOptions = RunOptions,
InputsCrit = InputsCrit, CalibOptions = CalibOptions,
FUN_MOD = RunModel_GR4J)
Param <- OutputsCalib$ParamFinalR
Param
## -----------------------------------------------------------------------------
InputsModel <- CreateInputsModel(FUN_MOD = RunModel_GR6J, DatesR = BasinObs$DatesR,
Precip = BasinObs$P, PotEvap = BasinObs$E)
str(InputsModel)
## -----------------------------------------------------------------------------
Ind_Run <- seq(which(format(BasinObs$DatesR, format = "%Y-%m-%d") == "1990-01-01"),
which(format(BasinObs$DatesR, format = "%Y-%m-%d") == "1999-12-31"))
str(Ind_Run)
## -----------------------------------------------------------------------------
RunOptions <- CreateRunOptions(FUN_MOD = RunModel_GR6J,
InputsModel = InputsModel, IndPeriod_Run = Ind_Run,
IniStates = NULL, IniResLevels = NULL, IndPeriod_WarmUp = NULL)
str(RunOptions)
## -----------------------------------------------------------------------------
InputsCrit <- CreateInputsCrit(FUN_CRIT = ErrorCrit_NSE, InputsModel = InputsModel,
RunOptions = RunOptions, VarObs = "Q", Obs = BasinObs$Qmm[Ind_Run])
str(InputsCrit)
## -----------------------------------------------------------------------------
CalibOptions <- CreateCalibOptions(FUN_MOD = RunModel_GR6J, FUN_CALIB = Calibration_Michel)
str(CalibOptions)
## -----------------------------------------------------------------------------
OutputsCalib <- Calibration_Michel(InputsModel = InputsModel, RunOptions = RunOptions,
InputsCrit = InputsCrit, CalibOptions = CalibOptions,
FUN_MOD = RunModel_GR4J)
Param <- OutputsCalib$ParamFinalR
Param
## -----------------------------------------------------------------------------
OutputsModel <- RunModel_GR4J(InputsModel = InputsModel, RunOptions = RunOptions, Param = Param)
str(OutputsModel)
## ----eval=F-------------------------------------------------------------------
plot(OutputsModel, Qobs = BasinObs$Qmm[Ind_Run])
## -----------------------------------------------------------------------------
OutputsModel <- RunModel_GR6J(InputsModel = InputsModel, RunOptions = RunOptions, Param = Param)
str(OutputsModel)
## ----eval=F-------------------------------------------------------------------
plot(OutputsModel, Qobs = BasinObs$Qmm[Ind_Run])
## -----------------------------------------------------------------------------
InputsModel <- CreateInputsModel(FUN_MOD = RunModel_GR5J, DatesR = BasinObs$DatesR,
Precip = BasinObs$P, PotEvap = BasinObs$E)
str(InputsModel)
## -----------------------------------------------------------------------------
Ind_Run <- seq(which(format(BasinObs$DatesR, format = "%Y-%m-%d") == "1990-01-01"),
which(format(BasinObs$DatesR, format = "%Y-%m-%d") == "1999-12-31"))
str(Ind_Run)
## -----------------------------------------------------------------------------
RunOptions <- CreateRunOptions(FUN_MOD = RunModel_GR5J,
InputsModel = InputsModel, IndPeriod_Run = Ind_Run,
IniStates = NULL, IniResLevels = NULL, IndPeriod_WarmUp = NULL)
str(RunOptions)
## -----------------------------------------------------------------------------
InputsCrit <- CreateInputsCrit(FUN_CRIT = ErrorCrit_NSE, InputsModel = InputsModel,
RunOptions = RunOptions, VarObs = "Q", Obs = BasinObs$Qmm[Ind_Run])
str(InputsCrit)
## -----------------------------------------------------------------------------
CalibOptions <- CreateCalibOptions(FUN_MOD = RunModel_GR5J, FUN_CALIB = Calibration_Michel)
str(CalibOptions)
## -----------------------------------------------------------------------------
OutputsCalib <- Calibration_Michel(InputsModel = InputsModel, RunOptions = RunOptions,
InputsCrit = InputsCrit, CalibOptions = CalibOptions,
FUN_MOD = RunModel_GR4J)
Param <- OutputsCalib$ParamFinalR
Param
## -----------------------------------------------------------------------------
OutputsModel <- RunModel_GR6J(InputsModel = InputsModel, RunOptions = RunOptions, Param = Param)
str(OutputsModel)
## ----eval=F-------------------------------------------------------------------
plot(OutputsModel, Qobs = BasinObs$Qmm[Ind_Run])
## -----------------------------------------------------------------------------
OutputsModel <- RunModel_GR5J(InputsModel = InputsModel, RunOptions = RunOptions, Param = Param)
str(OutputsModel)
## ----eval=F-------------------------------------------------------------------
plot(OutputsModel, Qobs = BasinObs$Qmm[Ind_Run])
## -----------------------------------------------------------------------------
OutputsCalib <- Calibration_Michel(InputsModel = InputsModel, RunOptions = RunOptions,
InputsCrit = InputsCrit, CalibOptions = CalibOptions,
FUN_MOD = RunModel_GR5J)
Param <- OutputsCalib$ParamFinalR
Param
## -----------------------------------------------------------------------------
OutputsModel <- RunModel_GR5J(InputsModel = InputsModel, RunOptions = RunOptions, Param = Param)
str(OutputsModel)
## ----eval=F-------------------------------------------------------------------
plot(OutputsModel, Qobs = BasinObs$Qmm[Ind_Run])
matrix(c(+5.12, -1.18, +4.34, -9.69,
+5.58, -0.85, +4.74, -9.47,
+6.01, -0.50, +5.14, -8.87), ncol = 4, byrow = TRUE)
View(RunOptions)
## -----------------------------------------------------------------------------
library(airGR)
## -----------------------------------------------------------------------------
data(L0123001)
summary(BasinObs, digits = 2)
## -----------------------------------------------------------------------------
InputsModel <- CreateInputsModel(FUN_MOD = RunModel_CemaNeigeGR4J, DatesR = BasinObs$DatesR,
Precip = BasinObs$P, PotEvap = BasinObs$E)
## -----------------------------------------------------------------------------
InputsModel <- CreateInputsModel(FUN_MOD = RunModel_CemaNeigeGR4J, DatesR = BasinObs$DatesR,
Precip = BasinObs$P, PotEvap = BasinObs$E, TempMean = BasinObs$T)
str(InputsModel)
## -----------------------------------------------------------------------------
Ind_Run <- seq(which(format(BasinObs$DatesR, format = "%Y-%m-%d") == "1990-01-01"),
which(format(BasinObs$DatesR, format = "%Y-%m-%d") == "1999-12-31"))
str(Ind_Run)
## -----------------------------------------------------------------------------
RunOptions <- CreateRunOptions(FUN_MOD = RunModel_CemaNeigeGR4J,
InputsModel = InputsModel, IndPeriod_Run = Ind_Run,
IniStates = NULL, IniResLevels = NULL, IndPeriod_WarmUp = NULL)
